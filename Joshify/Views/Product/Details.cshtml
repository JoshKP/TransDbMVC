@model TransactionManagement.MVC.Models.ProductModels.ProductDetail

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>ProductDetail</h4>
    <hr />
    <dl class="row dl-horizontal">

            @*<dt>
                    @Html.DisplayNameFor(model => model.SupplierId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.SupplierId)
                </dd>*@

            <dt>
                @Html.DisplayNameFor(model => model.Company)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Company)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Category)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.InventoryCount)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.InventoryCount)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Notes)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Notes)
            </dd>
    </dl>

            

        <div class="row">
            <div id="smart-button-container" class="paypal-details-container">
                <div class="col-md-4">
                    <dd>
                        <img src="/Product/RetrieveImage/@Model.ProductId" alt="" height=200 width=300
                    </dd>
                </div>


                <div class="col-md-3"style="text-align: center;">
                    <div style="margin-bottom: 1.25rem; color: black;">
                        <p style="color: white;">Shipping $4.99</p>
                        <select id="item-options"><option value="Winter Coat" price="210">Winter Coat - 210 USD</option><option value="Board Shorts" price="54">Board Shorts - 54 USD</option><option value="Rain Coat" price="62">Rain Coat - 62 USD</option><option value="Turtleneck" price="44">Turtleneck - 44 USD</option></select>
                        <select style="visibility: hidden" id="quantitySelect"><option value="1">1</option><option value="2">2</option><option value="3">3</option><option value="4">4</option><option value="5">5</option><option value="6">6</option><option value="7">7</option><option value="8">8</option><option value="9">9</option><option value="10">10</option><option value="11">11</option><option value="12">12</option><option value="13">13</option><option value="14">14</option><option value="15">15</option><option value="16">16</option><option value="17">17</option><option value="18">18</option><option value="19">19</option><option value="20">20</option><option value="21">21</option><option value="22">22</option><option value="23">23</option><option value="24">24</option><option value="25">25</option><option value="26">26</option><option value="27">27</option><option value="28">28</option><option value="29">29</option><option value="30">30</option><option value="31">31</option><option value="32">32</option><option value="33">33</option><option value="34">34</option><option value="35">35</option><option value="36">36</option><option value="37">37</option><option value="38">38</option><option value="39">39</option><option value="40">40</option><option value="41">41</option><option value="42">42</option><option value="43">43</option><option value="44">44</option><option value="45">45</option><option value="46">46</option><option value="47">47</option><option value="48">48</option><option value="49">49</option><option value="50">50</option><option value="51">51</option><option value="52">52</option><option value="53">53</option><option value="54">54</option><option value="55">55</option><option value="56">56</option><option value="57">57</option><option value="58">58</option><option value="59">59</option><option value="60">60</option><option value="61">61</option><option value="62">62</option><option value="63">63</option><option value="64">64</option><option value="65">65</option><option value="66">66</option><option value="67">67</option><option value="68">68</option><option value="69">69</option><option value="70">70</option><option value="71">71</option><option value="72">72</option><option value="73">73</option><option value="74">74</option><option value="75">75</option><option value="76">76</option><option value="77">77</option><option value="78">78</option><option value="79">79</option><option value="80">80</option></select>
                    </div>
                    <div id="paypal-button-container"></div>
                </div>
            </div>
        </div>
</div>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.ProductId })
    }
    @Html.ActionLink("Back to List", "Index")
</p>


<script src="https://www.paypal.com/sdk/js?client-id=sb&currency=USD" data-sdk-integration-source="button-factory"></script>
<script>
    function initPayPalButton() {
        var shipping = 4.99;
        var itemOptions = document.querySelector("#smart-button-container #item-options");
        var quantity = parseInt(80);
        var quantitySelect = document.querySelector("#smart-button-container #quantitySelect");
        if (!isNaN(quantity)) {
            quantitySelect.style.visibility = "visible";
        }
        var orderDescription = 'Shipping $4.99';
        if (orderDescription === '') {
            orderDescription = 'Item';
        }
        paypal.Buttons({
            style: {
                shape: 'pill',
                color: 'white',
                layout: 'vertical',
                label: 'paypal',

            },
            createOrder: function (data, actions) {
                var selectedItemDescription = itemOptions.options[itemOptions.selectedIndex].value;
                var selectedItemPrice = parseFloat(itemOptions.options[itemOptions.selectedIndex].getAttribute("price"));
                var tax = (7 === 0) ? 0 : (selectedItemPrice * (parseFloat(7) / 100));
                if (quantitySelect.options.length > 0) {
                    quantity = parseInt(quantitySelect.options[quantitySelect.selectedIndex].value);
                } else {
                    quantity = 1;
                }

                tax *= quantity;
                tax = Math.round(tax * 100) / 100;
                var priceTotal = quantity * selectedItemPrice + parseFloat(shipping) + tax;
                priceTotal = Math.round(priceTotal * 100) / 100;
                var itemTotalValue = Math.round((selectedItemPrice * quantity) * 100) / 100;

                return actions.order.create({
                    purchase_units: [{
                        description: orderDescription,
                        amount: {
                            currency_code: 'USD',
                            value: priceTotal,
                            breakdown: {
                                item_total: {
                                    currency_code: 'USD',
                                    value: itemTotalValue,
                                },
                                shipping: {
                                    currency_code: 'USD',
                                    value: shipping,
                                },
                                tax_total: {
                                    currency_code: 'USD',
                                    value: tax,
                                }
                            }
                        },
                        items: [{
                            name: selectedItemDescription,
                            unit_amount: {
                                currency_code: 'USD',
                                value: selectedItemPrice,
                            },
                            quantity: quantity
                        }]
                    }]
                });
            },
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    alert('Transaction completed by ' + details.payer.name.given_name + '!');
                });
            },
            onError: function (err) {
                console.log(err);
            },
        }).render('#paypal-button-container');
    }
    initPayPalButton();
</script>